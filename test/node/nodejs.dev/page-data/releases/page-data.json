{"componentChunkName":"component---src-pages-releases-tsx","path":"/releases/","result":{"data":{"page":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Releases\",\n  \"description\": \"Releases | Node.js\",\n  \"authors\": \"ZYSzys, nstanard,  mikeal, fhemberger, garybernhardt, piepmatz, boneskull, bjb568\",\n  \"category\": \"releases\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Major Node.js versions enter \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Current\"), \" release status for six months, which gives library authors time to add support for them.\\nAfter six months, odd-numbered releases (9, 11, etc.) become unsupported, and even-numbered releases (10, 12, etc.) move to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Active LTS\"), \" status and are ready for general use.\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"LTS\"), \" release status is \\\"long-term support\\\", which typically guarantees that critical bugs will be fixed for a total of 30 months.\\nProduction applications should only use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Active LTS\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Maintenance LTS\"), \" releases.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/nodejs/Release/master/schedule.svg?sanitize=true\",\n    \"alt\": \"Releases\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"Releases","description":"Releases | Node.js"},"fields":{"authors":["ZYSzys"," nstanard","  mikeal"," fhemberger"," garybernhardt"," piepmatz"," boneskull"," bjb568"]}},"nodeReleases":{"nodeReleasesData":[{"activeLTSStart":"2019-10-21","codename":"Erbium","endOfLife":"2022-04-30","initialRelease":"2019-04-23","maintenanceLTSStart":"2020-11-30","release":"v12","status":"Maintenance LTS"},{"activeLTSStart":"2020-10-27","codename":"Fermium","endOfLife":"2023-04-30","initialRelease":"2020-04-21","maintenanceLTSStart":"2021-10-19","release":"v14","status":"Maintenance LTS"},{"activeLTSStart":"2021-10-26","codename":"Gallium","endOfLife":"2024-04-30","initialRelease":"2021-04-20","maintenanceLTSStart":"2022-10-18","release":"v16","status":"Active LTS"},{"activeLTSStart":"","codename":"","endOfLife":"2022-06-01","initialRelease":"2021-10-19","maintenanceLTSStart":"2022-04-01","release":"v17","status":"Current"},{"activeLTSStart":"2022-10-25","codename":"","endOfLife":"2025-04-30","initialRelease":"2022-04-19","maintenanceLTSStart":"2023-10-18","release":"v18","status":"Pending"}]}},"pageContext":{}},"staticQueryHashes":[]}