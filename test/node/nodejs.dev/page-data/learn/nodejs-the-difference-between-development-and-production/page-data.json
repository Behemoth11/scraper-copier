{"componentChunkName":"component---src-templates-learn-tsx","path":"/learn/nodejs-the-difference-between-development-and-production","result":{"data":{"doc":{"id":"a2b2c9fc-eb55-5993-9a3e-91ddf0b35468","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Node.js, the difference between development and production\",\n  \"description\": \"Learn how to set up different configurations for production and development environments\",\n  \"authors\": \"flaviocopes, MylesBorins, fhemberger, LaRuaNa, ahmadawais\",\n  \"section\": \"Getting Started\",\n  \"category\": \"learn\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can have different configurations for production and development environments.\"), mdx(\"p\", null, \"Node.js assumes it's always running in a development environment.\\nYou can signal Node.js that you are running in production by setting the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NODE_ENV=production\"), \" environment variable.\"), mdx(\"p\", null, \"This is usually done by executing the command\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"export NODE_ENV=production\\n\")), mdx(\"p\", null, \"in the shell, but it's better to put it in your shell configuration file (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".bash_profile\"), \" with the Bash shell) because otherwise the setting does not persist in case of a system restart.\"), mdx(\"p\", null, \"You can also apply the environment variable by prepending it to your application initialization command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"NODE_ENV=production node app.js\\n\")), mdx(\"p\", null, \"This environment variable is a convention that is widely used in external libraries as well.\"), mdx(\"p\", null, \"Setting the environment to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"production\"), \" generally ensures that\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"logging is kept to a minimum, essential level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"more caching levels take place to optimize performance\")), mdx(\"p\", null, \"For example Pug, the templating library used by Express, compiles in debug mode if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NODE_ENV\"), \" is not set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"production\"), \". Express views are compiled in every request in development mode, while in production they are cached. There are many more examples.\"), mdx(\"p\", null, \"You can use conditional statements to execute code in different environments:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"if (process.env.NODE_ENV === \\\"development\\\") {\\n  //...\\n}\\nif (process.env.NODE_ENV === \\\"production\\\") {\\n  //...\\n}\\nif(['production', 'staging'].indexOf(process.env.NODE_ENV) >= 0) {\\n  //...\\n})\\n\")), mdx(\"p\", null, \"For example, in an Express app, you can use this to set different error handlers per environment:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"if (process.env.NODE_ENV === \\\"development\\\") {\\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }))\\n})\\n\\nif (process.env.NODE_ENV === \\\"production\\\") {\\n  app.use(express.errorHandler())\\n})\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"Node.js, the difference between development and production","description":"Learn how to set up different configurations for production and development environments"},"fields":{"slug":"nodejs-the-difference-between-development-and-production","authors":["flaviocopes"," MylesBorins"," fhemberger"," LaRuaNa"," ahmadawais"]}}},"pageContext":{"slug":"nodejs-the-difference-between-development-and-production","next":{"slug":"error-handling-in-nodejs","title":"Error handling in Node.js"},"previous":{"slug":"nodejs-streams","title":"Node.js Streams"},"relativePath":"0053-node-difference-dev-prod/index.md","category":"learn","navigationData":{"null":{"data":[{"title":"Releases","slug":"releases","section":null,"category":"releases"},{"title":"mock","slug":"/blog/0000/00/00/mock","section":null,"category":"blog"},{"title":"Installing Node.js via package manager","slug":"installing-nodejs-via-package-manager","section":null,"category":"download"},{"title":"Benchmarking","slug":"benchmarking","section":null,"category":null},{"title":"metrics","slug":"metrics","section":null,"category":null}],"category":"releases"},"Quick Start":{"data":[{"title":"Introduction to Node.js","slug":"introduction-to-nodejs","section":"Quick Start","category":"learn"},{"title":"A brief history of Node.js","slug":"a-brief-history-of-nodejs","section":"Quick Start","category":"learn"},{"title":"How to install Node.js","slug":"how-to-install-nodejs","section":"Quick Start","category":"learn"},{"title":"How much JavaScript do you need to know to use Node.js?","slug":"how-much-javascript-do-you-need-to-know-to-use-nodejs","section":"Quick Start","category":"learn"},{"title":"Differences between Node.js and the Browser","slug":"differences-between-nodejs-and-the-browser","section":"Quick Start","category":"learn"}],"category":"learn"},"Getting Started":{"data":[{"title":"The V8 JavaScript Engine","slug":"the-v8-javascript-engine","section":"Getting Started","category":"learn"},{"title":"Run Node.js scripts from the command line","slug":"run-nodejs-scripts-from-the-command-line","section":"Getting Started","category":"learn"},{"title":"How to exit from a Node.js program","slug":"how-to-exit-from-a-nodejs-program","section":"Getting Started","category":"learn"},{"title":"How to read environment variables from Node.js","slug":"how-to-read-environment-variables-from-nodejs","section":"Getting Started","category":"learn"},{"title":"How to use the Node.js REPL","slug":"how-to-use-the-nodejs-repl","section":"Getting Started","category":"learn"},{"title":"Node.js, accept arguments from the command line","slug":"nodejs-accept-arguments-from-the-command-line","section":"Getting Started","category":"learn"},{"title":"Output to the command line using Node.js","slug":"output-to-the-command-line-using-nodejs","section":"Getting Started","category":"learn"},{"title":"Accept input from the command line in Node.js","slug":"accept-input-from-the-command-line-in-nodejs","section":"Getting Started","category":"learn"},{"title":"Expose functionality from a Node.js file using exports","slug":"expose-functionality-from-a-nodejs-file-using-exports","section":"Getting Started","category":"learn"},{"title":"An introduction to the npm package manager","slug":"an-introduction-to-the-npm-package-manager","section":"Getting Started","category":"learn"},{"title":"Where does npm install the packages?","slug":"where-does-npm-install-the-packages","section":"Getting Started","category":"learn"},{"title":"How to use or execute a package installed using npm","slug":"how-to-use-or-execute-a-package-installed-using-npm","section":"Getting Started","category":"learn"},{"title":"The package.json guide","slug":"the-package-json-guide","section":"Getting Started","category":"learn"},{"title":"The package-lock.json file","slug":"the-package-lock-json-file","section":"Getting Started","category":"learn"},{"title":"Find the installed version of an npm package","slug":"find-the-installed-version-of-an-npm-package","section":"Getting Started","category":"learn"},{"title":"Install an older version of an npm package","slug":"install-an-older-version-of-an-npm-package","section":"Getting Started","category":"learn"},{"title":"Update all the Node.js dependencies to their latest version","slug":"update-all-the-nodejs-dependencies-to-their-latest-version","section":"Getting Started","category":"learn"},{"title":"Semantic Versioning using npm","slug":"semantic-versioning-using-npm","section":"Getting Started","category":"learn"},{"title":"Uninstalling npm packages","slug":"uninstalling-npm-packages","section":"Getting Started","category":"learn"},{"title":"npm global or local packages","slug":"npm-global-or-local-packages","section":"Getting Started","category":"learn"},{"title":"npm dependencies and devDependencies","slug":"npm-dependencies-and-devdependencies","section":"Getting Started","category":"learn"},{"title":"The npx Node.js Package Runner","slug":"the-npx-nodejs-package-runner","section":"Getting Started","category":"learn"},{"title":"The Node.js Event Loop","slug":"the-nodejs-event-loop","section":"Getting Started","category":"learn"},{"title":"Understanding process.nextTick()","slug":"understanding-process-nexttick","section":"Getting Started","category":"learn"},{"title":"Understanding setImmediate()","slug":"understanding-setimmediate","section":"Getting Started","category":"learn"},{"title":"Discover JavaScript Timers","slug":"discover-javascript-timers","section":"Getting Started","category":"learn"},{"title":"JavaScript Asynchronous Programming and Callbacks","slug":"javascript-asynchronous-programming-and-callbacks","section":"Getting Started","category":"learn"},{"title":"Understanding JavaScript Promises","slug":"understanding-javascript-promises","section":"Getting Started","category":"learn"},{"title":"Modern Asynchronous JavaScript with Async and Await","slug":"modern-asynchronous-javascript-with-async-and-await","section":"Getting Started","category":"learn"},{"title":"The Node.js Event emitter","slug":"the-nodejs-event-emitter","section":"Getting Started","category":"learn"},{"title":"Build an HTTP Server","slug":"build-an-http-server","section":"Getting Started","category":"learn"},{"title":"Making HTTP requests with Node.js","slug":"making-http-requests-with-nodejs","section":"Getting Started","category":"learn"},{"title":"Make an HTTP POST request using Node.js","slug":"make-an-http-post-request-using-nodejs","section":"Getting Started","category":"learn"},{"title":"Get HTTP request body data using Node.js","slug":"get-http-request-body-data-using-nodejs","section":"Getting Started","category":"learn"},{"title":"Working with file descriptors in Node.js","slug":"working-with-file-descriptors-in-nodejs","section":"Getting Started","category":"learn"},{"title":"Node.js file stats","slug":"nodejs-file-stats","section":"Getting Started","category":"learn"},{"title":"Node.js File Paths","slug":"nodejs-file-paths","section":"Getting Started","category":"learn"},{"title":"Reading files with Node.js","slug":"reading-files-with-nodejs","section":"Getting Started","category":"learn"},{"title":"Writing files with Node.js","slug":"writing-files-with-nodejs","section":"Getting Started","category":"learn"},{"title":"Working with folders in Node.js","slug":"working-with-folders-in-nodejs","section":"Getting Started","category":"learn"},{"title":"The Node.js fs module","slug":"the-nodejs-fs-module","section":"Getting Started","category":"learn"},{"title":"The Node.js path module","slug":"the-nodejs-path-module","section":"Getting Started","category":"learn"},{"title":"The Node.js os module","slug":"the-nodejs-os-module","section":"Getting Started","category":"learn"},{"title":"The Node.js events module","slug":"the-nodejs-events-module","section":"Getting Started","category":"learn"},{"title":"The Node.js http module","slug":"the-nodejs-http-module","section":"Getting Started","category":"learn"},{"title":"Node.js Buffers","slug":"nodejs-buffers","section":"Getting Started","category":"learn"},{"title":"Node.js Streams","slug":"nodejs-streams","section":"Getting Started","category":"learn"},{"title":"Node.js, the difference between development and production","slug":"nodejs-the-difference-between-development-and-production","section":"Getting Started","category":"learn"},{"title":"Error handling in Node.js","slug":"error-handling-in-nodejs","section":"Getting Started","category":"learn"},{"title":"How to log an object in Node.js","slug":"how-to-log-an-object-in-nodejs","section":"Getting Started","category":"learn"},{"title":"Node.js with TypeScript","slug":"nodejs-with-typescript","section":"Getting Started","category":"learn"},{"title":"Node.js with WebAssembly","slug":"nodejs-with-webassembly","section":"Getting Started","category":"learn"}],"category":"learn"}}}},"staticQueryHashes":[]}