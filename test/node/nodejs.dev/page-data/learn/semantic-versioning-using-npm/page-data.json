{"componentChunkName":"component---src-templates-learn-tsx","path":"/learn/semantic-versioning-using-npm","result":{"data":{"doc":{"id":"da114c0d-4032-555d-9892-631a55db7798","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Semantic Versioning using npm\",\n  \"description\": \"Semantic Versioning is a convention used to provide a meaning to versions\",\n  \"authors\": \"flaviocopes, MylesBorins, LaRuaNa, ahmadawais\",\n  \"section\": \"Getting Started\",\n  \"category\": \"learn\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If there's one great thing in Node.js packages, it's that they all agreed on using Semantic Versioning for their version numbering.\"), mdx(\"p\", null, \"The Semantic Versioning concept is simple: all versions have 3 digits: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x.y.z\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the first digit is the major version\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the second digit is the minor version\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the third digit is the patch version\")), mdx(\"p\", null, \"When you make a new release, you don't just up a number as you please, but you have rules:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you up the major version when you make incompatible API changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you up the minor version when you add functionality in a backward-compatible manner\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you up the patch version when you make backward-compatible bug fixes\")), mdx(\"p\", null, \"The convention is adopted all across programming languages, and it is very important that every \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm\"), \" package adheres to it, because the whole system depends on that.\"), mdx(\"p\", null, \"Why is that so important?\"), mdx(\"p\", null, \"Because \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm\"), \" set some rules we can use in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" file to choose which versions it can update our packages to, when we run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm update\"), \".\"), mdx(\"p\", null, \"The rules use those symbols:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"^\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">=\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<=\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"=\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"||\"))), mdx(\"p\", null, \"Let's see those rules in detail:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"^\"), \":  It will only do updates that do not change the leftmost non-zero number i.e there can be changes in minor version or patch version but not in major version. If you write \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"^13.1.0\"), \", when running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm update\"), \", it can update to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"13.2.0\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"13.3.0\"), \" even \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"13.3.1\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"13.3.2\"), \" and so on, but not to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"14.0.0\"), \" or above.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~\"), \": if you write \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~0.13.0\"), \" when running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm update\"), \" it can update to patch releases: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0.13.1\"), \" is ok, but \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0.14.0\"), \" is not.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">\"), \": you accept any version higher than the one you specify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \">=\"), \": you accept any version equal to or higher than the one you specify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<=\"), \": you accept any version equal or lower to the one you specify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<\"), \": you accept any version lower than the one you specify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"=\"), \": you accept that exact version\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-\"), \": you accept a range of versions. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"2.1.0 - 2.6.2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"||\"), \": you combine sets. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"< 2.1 || > 2.6\"))), mdx(\"p\", null, \"You can combine some of those notations, for example use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.0 || >=1.1.0 <1.2.0\"), \" to either use 1.0.0 or one release from 1.1.0 up, but lower than 1.2.0.\"), mdx(\"p\", null, \"There are other rules, too:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"no symbol: you accept only that specific version you specify (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"1.2.1\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"latest\"), \": you want to use the latest version available\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"Semantic Versioning using npm","description":"Semantic Versioning is a convention used to provide a meaning to versions"},"fields":{"slug":"semantic-versioning-using-npm","authors":["flaviocopes"," MylesBorins"," LaRuaNa"," ahmadawais"]}}},"pageContext":{"slug":"semantic-versioning-using-npm","next":{"slug":"uninstalling-npm-packages","title":"Uninstalling npm packages"},"previous":{"slug":"update-all-the-nodejs-dependencies-to-their-latest-version","title":"Update all the Node.js dependencies to their latest version"},"relativePath":"0024-npm-semantic-versioning/index.md","category":"learn","navigationData":{"null":{"data":[{"title":"Releases","slug":"releases","section":null,"category":"releases"},{"title":"mock","slug":"/blog/0000/00/00/mock","section":null,"category":"blog"},{"title":"Installing Node.js via package manager","slug":"installing-nodejs-via-package-manager","section":null,"category":"download"},{"title":"Benchmarking","slug":"benchmarking","section":null,"category":null},{"title":"metrics","slug":"metrics","section":null,"category":null}],"category":"releases"},"Quick Start":{"data":[{"title":"Introduction to Node.js","slug":"introduction-to-nodejs","section":"Quick Start","category":"learn"},{"title":"A brief history of Node.js","slug":"a-brief-history-of-nodejs","section":"Quick Start","category":"learn"},{"title":"How to install Node.js","slug":"how-to-install-nodejs","section":"Quick Start","category":"learn"},{"title":"How much JavaScript do you need to know to use Node.js?","slug":"how-much-javascript-do-you-need-to-know-to-use-nodejs","section":"Quick Start","category":"learn"},{"title":"Differences between Node.js and the Browser","slug":"differences-between-nodejs-and-the-browser","section":"Quick Start","category":"learn"}],"category":"learn"},"Getting Started":{"data":[{"title":"The V8 JavaScript Engine","slug":"the-v8-javascript-engine","section":"Getting Started","category":"learn"},{"title":"Run Node.js scripts from the command line","slug":"run-nodejs-scripts-from-the-command-line","section":"Getting Started","category":"learn"},{"title":"How to exit from a Node.js program","slug":"how-to-exit-from-a-nodejs-program","section":"Getting Started","category":"learn"},{"title":"How to read environment variables from Node.js","slug":"how-to-read-environment-variables-from-nodejs","section":"Getting Started","category":"learn"},{"title":"How to use the Node.js REPL","slug":"how-to-use-the-nodejs-repl","section":"Getting Started","category":"learn"},{"title":"Node.js, accept arguments from the command line","slug":"nodejs-accept-arguments-from-the-command-line","section":"Getting Started","category":"learn"},{"title":"Output to the command line using Node.js","slug":"output-to-the-command-line-using-nodejs","section":"Getting Started","category":"learn"},{"title":"Accept input from the command line in Node.js","slug":"accept-input-from-the-command-line-in-nodejs","section":"Getting Started","category":"learn"},{"title":"Expose functionality from a Node.js file using exports","slug":"expose-functionality-from-a-nodejs-file-using-exports","section":"Getting Started","category":"learn"},{"title":"An introduction to the npm package manager","slug":"an-introduction-to-the-npm-package-manager","section":"Getting Started","category":"learn"},{"title":"Where does npm install the packages?","slug":"where-does-npm-install-the-packages","section":"Getting Started","category":"learn"},{"title":"How to use or execute a package installed using npm","slug":"how-to-use-or-execute-a-package-installed-using-npm","section":"Getting Started","category":"learn"},{"title":"The package.json guide","slug":"the-package-json-guide","section":"Getting Started","category":"learn"},{"title":"The package-lock.json file","slug":"the-package-lock-json-file","section":"Getting Started","category":"learn"},{"title":"Find the installed version of an npm package","slug":"find-the-installed-version-of-an-npm-package","section":"Getting Started","category":"learn"},{"title":"Install an older version of an npm package","slug":"install-an-older-version-of-an-npm-package","section":"Getting Started","category":"learn"},{"title":"Update all the Node.js dependencies to their latest version","slug":"update-all-the-nodejs-dependencies-to-their-latest-version","section":"Getting Started","category":"learn"},{"title":"Semantic Versioning using npm","slug":"semantic-versioning-using-npm","section":"Getting Started","category":"learn"},{"title":"Uninstalling npm packages","slug":"uninstalling-npm-packages","section":"Getting Started","category":"learn"},{"title":"npm global or local packages","slug":"npm-global-or-local-packages","section":"Getting Started","category":"learn"},{"title":"npm dependencies and devDependencies","slug":"npm-dependencies-and-devdependencies","section":"Getting Started","category":"learn"},{"title":"The npx Node.js Package Runner","slug":"the-npx-nodejs-package-runner","section":"Getting Started","category":"learn"},{"title":"The Node.js Event Loop","slug":"the-nodejs-event-loop","section":"Getting Started","category":"learn"},{"title":"Understanding process.nextTick()","slug":"understanding-process-nexttick","section":"Getting Started","category":"learn"},{"title":"Understanding setImmediate()","slug":"understanding-setimmediate","section":"Getting Started","category":"learn"},{"title":"Discover JavaScript Timers","slug":"discover-javascript-timers","section":"Getting Started","category":"learn"},{"title":"JavaScript Asynchronous Programming and Callbacks","slug":"javascript-asynchronous-programming-and-callbacks","section":"Getting Started","category":"learn"},{"title":"Understanding JavaScript Promises","slug":"understanding-javascript-promises","section":"Getting Started","category":"learn"},{"title":"Modern Asynchronous JavaScript with Async and Await","slug":"modern-asynchronous-javascript-with-async-and-await","section":"Getting Started","category":"learn"},{"title":"The Node.js Event emitter","slug":"the-nodejs-event-emitter","section":"Getting Started","category":"learn"},{"title":"Build an HTTP Server","slug":"build-an-http-server","section":"Getting Started","category":"learn"},{"title":"Making HTTP requests with Node.js","slug":"making-http-requests-with-nodejs","section":"Getting Started","category":"learn"},{"title":"Make an HTTP POST request using Node.js","slug":"make-an-http-post-request-using-nodejs","section":"Getting Started","category":"learn"},{"title":"Get HTTP request body data using Node.js","slug":"get-http-request-body-data-using-nodejs","section":"Getting Started","category":"learn"},{"title":"Working with file descriptors in Node.js","slug":"working-with-file-descriptors-in-nodejs","section":"Getting Started","category":"learn"},{"title":"Node.js file stats","slug":"nodejs-file-stats","section":"Getting Started","category":"learn"},{"title":"Node.js File Paths","slug":"nodejs-file-paths","section":"Getting Started","category":"learn"},{"title":"Reading files with Node.js","slug":"reading-files-with-nodejs","section":"Getting Started","category":"learn"},{"title":"Writing files with Node.js","slug":"writing-files-with-nodejs","section":"Getting Started","category":"learn"},{"title":"Working with folders in Node.js","slug":"working-with-folders-in-nodejs","section":"Getting Started","category":"learn"},{"title":"The Node.js fs module","slug":"the-nodejs-fs-module","section":"Getting Started","category":"learn"},{"title":"The Node.js path module","slug":"the-nodejs-path-module","section":"Getting Started","category":"learn"},{"title":"The Node.js os module","slug":"the-nodejs-os-module","section":"Getting Started","category":"learn"},{"title":"The Node.js events module","slug":"the-nodejs-events-module","section":"Getting Started","category":"learn"},{"title":"The Node.js http module","slug":"the-nodejs-http-module","section":"Getting Started","category":"learn"},{"title":"Node.js Buffers","slug":"nodejs-buffers","section":"Getting Started","category":"learn"},{"title":"Node.js Streams","slug":"nodejs-streams","section":"Getting Started","category":"learn"},{"title":"Node.js, the difference between development and production","slug":"nodejs-the-difference-between-development-and-production","section":"Getting Started","category":"learn"},{"title":"Error handling in Node.js","slug":"error-handling-in-nodejs","section":"Getting Started","category":"learn"},{"title":"How to log an object in Node.js","slug":"how-to-log-an-object-in-nodejs","section":"Getting Started","category":"learn"},{"title":"Node.js with TypeScript","slug":"nodejs-with-typescript","section":"Getting Started","category":"learn"},{"title":"Node.js with WebAssembly","slug":"nodejs-with-webassembly","section":"Getting Started","category":"learn"}],"category":"learn"}}}},"staticQueryHashes":[]}